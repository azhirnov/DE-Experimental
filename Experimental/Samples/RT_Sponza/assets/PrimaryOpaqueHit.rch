#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_GOOGLE_include_directive : require
#extension GL_EXT_nonuniform_qualifier : require

#include "structures.fxh"

layout(location = PRIMARY_RAY_INDEX) rayPayloadInEXT PrimaryPayload payload;
hitAttributeEXT vec2  hitAttribs;

#define SHADOW_RAY_CAST
#include "Lighting.fxh"
#include "Material.fxh"

void main ()
{
	float3          origin = gl_WorldRayOriginEXT + gl_WorldRayDirectionEXT * gl_HitTEXT;
    IntermMaterial  mtr    = ReadMaterial(hitAttribs);
    float3          color  = mtr.color.rgb;
    
    color *= clamp( LightingPass(origin, mtr.normal), 0.25, 1.0 );

    payload.Color = color;
    payload.Depth = gl_HitTEXT;
}
